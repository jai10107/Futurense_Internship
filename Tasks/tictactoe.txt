import random

def print_board(board):
    for row in board:
        print(" ".join(row))

def check_winner(board, player):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if all(cell == player for cell in board[i]) or all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_board_full(board):
    return all(all(cell != ' ' for cell in row) for row in board)

def player_turn(board, player):
    while True:
        try:
            position = int(input(f"Enter the position (1-9) for {player}: "))
            if 1 <= position <= 9:
                row, col = divmod(position - 1, 3)
                if board[row][col] == ' ':
                    board[row][col] = player
                    break
                else:
                    print("Position already taken. Try again.")
            else:
                print("Invalid position. Please enter a number between 1 and 9.")
        except ValueError:
            print("Invalid input. Please enter a number.")

def computer_turn(board, player):
    print(f"{player}'s turn:")
    while True:
        # Generate a random position for the computer's move
        position = random.randint(1, 9)
        row, col = divmod(position - 1, 3)

        if board[row][col] == ' ':
            board[row][col] = player
            print(f"{player} chooses position {position}.")
            break

def coin_flip():
    return random.choice(['Heads', 'Tails'])

def decide_first_player(player1, player2):
    while True:
        decision = input(f"{player1}, choose 'Heads' or 'Tails' for the coin flip: ").capitalize()
        if decision in ['Heads', 'Tails']:
            break
        else:
            print("Invalid input. Please choose 'Heads' or 'Tails'.")

    flip_result = coin_flip()
    print(f"The result of the coin flip is: {flip_result}")

    if decision == flip_result:
        print(f"{player1} won the toss and will go first!")
        return player1, player2
    else:
        print(f"{player2} won the toss and will go first!")
        return player2, player1

def main():
    print("Welcome to Tic-Tac-Toe!")

    while True:
        mode = input("Choose a mode (1: Against the Program, 2: Against a Friend): ")

        if mode == '1':
            player_name = input("Enter your name: ")
            computer_name = "Computer"

            start_player, second_player = decide_first_player(player_name, computer_name)

            board = [[' ' for _ in range(3)] for _ in range(3)]
            print_board(board)

            while True:
                player_turn(board, 'X')
                print_board(board)

                if check_winner(board, 'X'):
                    print(f"Congratulations! {start_player} wins!")
                    break
                elif is_board_full(board):
                    print("It's a tie!")
                    break

                computer_turn(board, 'O')
                print_board(board)

                if check_winner(board, 'O'):
                    print(f"{computer_name} wins. Better luck next time, {start_player}!")
                    break
                elif is_board_full(board):
                    print("It's a tie!")
                    break

        elif mode == '2':
            player1 = input("Enter name for Player 1: ")
            player2 = input("Enter name for Player 2: ")

            start_player, second_player = decide_first_player(player1, player2)
            print(f"{start_player} will go first.")

            board = [[' ' for _ in range(3)] for _ in range(3)]
            print_board(board)

            while True:
                player_turn(board, 'X')
                print_board(board)

                if check_winner(board, 'X'):
                    print(f"Congratulations! {start_player} wins!")
                    break
                elif is_board_full(board):
                    print("It's a tie!")
                    break

                player_turn(board, 'O')
                print_board(board)

                if check_winner(board, 'O'):
                    print(f"Congratulations! {second_player} wins!")
                    break
                elif is_board_full(board):
                    print("It's a tie!")
                    break

        else:
            print("Invalid choice. Please choose 1 or 2.")

        play_again = input("Do you want to play again? (yes/no): ").lower()
        if play_again != 'yes':
            break

if _name_ == "_main_":
    main()